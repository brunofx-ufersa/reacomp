---
title: "Fundamentos e Ferramentas Gen√©ricas"
lang: pt
toc-title: Conte√∫do
toc: false
format:
  html:
    css: ../styles/turtlemap.css
---

Nesta unidade do curso, iremos estudar as **estruturas gen√©ricas**. Imagine poder criar uma lista ou uma √°rvore que funciona com qualquer tipo de dado, sem precisar mudar uma √∫nica linha do c√≥digo principal. As estruturas gen√©ricas permitem criar c√≥digos flex√≠veis usando conceitos como **listas gen√©ricas**, o uso de **_callbacks_** para opera√ß√µes personalizadas, e a constru√ß√£o de **√°rvores de busca gen√©ricas**. 

Antes de tudo, precisamos preparar o terreno para que n√£o nenhuma ponta solta. Iniciaremos com um pequena   revis√£o sobre ponteiros. Em seguida, introduzir os _callbacks_, seguido por gerenciamento de mem√≥ria.


<script>
// === CONFIGURA√á√ÉO DAS FASES ===
const fases = [
  { id: 1, nome: "Ilha dos Ponteiros", chave: "endereco", url: "1-ponteiros.html"},
  { id: 2, nome: "Deserto dos Callbacks", chave: "callback", url: "" },
  { id: 3, nome: "Vale da Mem√≥ria", chave: "malloc", url: "" }
];

// === RECUPERA PROGRESSO DO LOCALSTORAGE ===
let progresso = JSON.parse(localStorage.getItem("progressoTurtC")) || [];

// === FUN√á√ÉO PARA SALVAR ===
function salvarProgresso() {
  localStorage.setItem("progressoTurtC", JSON.stringify(progresso));
}

// === DESENHA O MAPA DE FASES ===
function mostrarFases() {
  const container = document.getElementById("mapa-fases");
  container.innerHTML = "";
  fases.forEach(fase => {
    const desbloqueada = progresso.includes(fase.id);
    const div = document.createElement("div");
    div.className = "fase";
    div.innerHTML = `
      <span class="emoji">${desbloqueada ? "üü¢" : "üîí"}</span>
      <strong><a  href="${fase.url}">${fase.nome}</a></strong>
    `;
    container.appendChild(div);
  });
}

// === DESBLOQUEAR NOVA FASE ===
function tentarDesbloquear() {
  const input = document.getElementById("chave-input").value.trim().toLowerCase();
  const fase = fases.find(f => f.chave === input);
  if (fase && !progresso.includes(fase.id)) {
    progresso.push(fase.id);
    salvarProgresso();
    alert(`‚úÖ Fase "${fase.nome}" desbloqueada!`);
    mostrarFases();
  } else {
    alert("‚ùå Palavra incorreta ou fase j√° desbloqueada!");
  }
}

// === RESETA PROGRESSO ===
function resetarProgresso() {
  if (confirm("Deseja reiniciar sua jornada?")) {
    progresso = [];
    salvarProgresso();
    mostrarFases();
  }
}

document.addEventListener("DOMContentLoaded", mostrarFases);
</script>


## üó∫Ô∏è Mapa da Jornada {#sec-mapa}

![](img/mapa-gen.png){width="480" fig-align="center"}


<div id="mapa-fases"></div>

**Digite a palavra-chave para desbloquear uma fase:**
<div class="input-group">
<input id="chave-input" class="input" placeholder="ex: endereco" />
<button class="button" onclick="tentarDesbloquear()"><i class="bi bi-unlock"></i></button>
<button class="button" onclick="resetarProgresso()"><i class="bi bi-arrow-clockwise"></i></button>
</div>

:::{.chat-container}
:::{.chat-line .shell}
![](../img/avatars/shell_avatar.png){.chat-avatar alt="Shell"}

:::{.chat-bubble}
 Ao completar desafios ou uma fase, voc√™ encontrar√° a palavra-chave para desbloquear a pr√≥xima. 

 _Fique atento √†s nossas dicas!_
:::
:::
:::
